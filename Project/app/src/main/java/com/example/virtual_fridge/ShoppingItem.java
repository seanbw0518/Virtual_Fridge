package com.example.virtual_fridge;

import android.os.Parcel;
import android.os.Parcelable;

import androidx.annotation.NonNull;
import androidx.room.Entity;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;

@Entity(tableName = "shopping_list_table")
public class ShoppingItem implements Parcelable {

    // unique id, autogenerated
    @PrimaryKey(autoGenerate = true)
    public int id;

    @NonNull
    public String name;

    public float quantity;
    public String unit;
    public String type;

    // unused constructor
    @Ignore
    public ShoppingItem(@NonNull String name) {
        this.name = name;
    }

    // used constructor
    public ShoppingItem(@NonNull String name, float quantity, String unit, String type) {
        this.name = name;
        this.quantity = quantity;
        this.unit = unit;
        this.type = type;
    }

    // Getters
    public int getId() {
        return id;
    }

    @NonNull
    public String getName() {
        return name;
    }

    public float getQuantity() {
        return quantity;
    }

    public String getUnit() {
        return unit;
    }

    public String getType() {
        return type;
    }

    // Setters
    public void setQuantity(float quantity) {
        this.quantity = quantity;
    }

    public void setId(int id) {
        this.id = id;
    }

    public void setName(@NonNull String name) {
        this.name = name;
    }

    public void setUnit(String unit) {
        this.unit = unit;
    }

    public void setType(String type) {
        this.type = type;
    }

    // Parcelable implementation methods
    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeInt(id);
        dest.writeString(name);
        dest.writeFloat(quantity);
        dest.writeString(unit);
        dest.writeString(type);
    }

    protected ShoppingItem(Parcel in) {
        id = in.readInt();
        name = in.readString();
        quantity = in.readFloat();
        unit = in.readString();
        type = in.readString();
    }

    public static final Creator<ShoppingItem> CREATOR = new Creator<ShoppingItem>() {
        @Override
        public ShoppingItem createFromParcel(Parcel in) {
            return new ShoppingItem(in);
        }

        @Override
        public ShoppingItem[] newArray(int size) {
            return new ShoppingItem[size];
        }
    };
}
